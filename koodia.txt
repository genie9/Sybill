  var getJSON = function (url) {
            return new Promise(function (resolve, reject) {
                var xhr = new XMLHttpRequest();
                xhr.open('get', url, true);
                xhr.responseType = 'json';
                xhr.onload = function () {
                    var status = xhr.status;
                    if (status == 200) {
                        resolve(xhr.response);
                    } else {
                        reject(status);
                    }
                };
                xhr.send();
            });
        };

        getJSON('http://api.rajatieto.org/v1/horoscopes/week').then(function (data) {
            alert('Your Json result is:  ' + data.result); //you can comment this, i used it to debug

            result.innerText = data.result; //display the result in an HTML element
        }, function (status) { //error detection....
            alert('Something went wrong.');
        });
		
		
        $(document).ready(function () {
            $.jsonp({
                url: 'http://api.rajatieto.org/v1/horoscopes/week',
                callbackParameter: 'callback',
                timeout: 25000,
                success: function (data, status) {
                    $.each(data, function (i, item) {
                        var horo = item.text;
                        $('#myhoro').append(horo);
                    });
                },
                error: function () {
                    $('#myhoro').append('There was an error loading the feed');
                }
            });
        });
		
		
		// Wait for PhoneGap to load
            document.addEventListener("deviceready", onDeviceReady, false);
            //Do the other stuff related to first time launch
            onDeviceReady();
		  // PhoneGap is ready
        //
        function onDeviceReady() {
            var db = window.openDatabase("DataBase", "1.0", "Sybill", 1000000);
            db.transaction(populateDB, errorCB, successCB);
        }
        function populateDB(tx) {
            tx.executeSql('DROP TABLE IF EXISTS USER');
            tx.executeSql('CREATE TABLE IF NOT EXISTS USER (id unique, email, sign)');
            tx.executeSql('INSERT INTO USER (id, email, sign) VALUES (01, uemail, usign)');
        }
        // Transaction error callback
        //
        function errorCB(tx, err) {
            alert("Error processing SQL: " + err);
        }

        // Transaction success callback
        //
        function successCB() {
            alert("success!");
        }